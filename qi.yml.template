---

email: anonymous@testdomain.org
# see available environments in 'env' directory
env_runtime: linux-desktop

# The apps variable lists the applications that must be installed. The
# properties of each application define the source of the code, the way that are
# deployed and how should run

apps:
# The app_name variable set an unique identifier that can be used to create the
# instances of the running applications, or to name a directory where all the
# files related to the application will be stored.
  - app_name: name-of-application
# the git_repository variable is used to retrieve the source code of the
# application if the code is not available through a shared folder. You can also
# set a git_branch variable to set the branch,tag,commit or pull request to
# retrieve.
    git_repository: https://github.com/user/repo.git
    git_branch: pr/1
# The software_stack variable set the software applicance that will be installed
# in the vm. The avaliable software stacks are in the provisioning directory.
    software_stack: [nodejs | couchdb]
# The deploy variable notifies to the stack that this application will be
# launched as a service. Note that the stack must know how to launch this
# application.
    deploy: false
# The 'run_in' variable indicates which VM of the environment will contain the
# application. To know the name of the VMs see the environment files found in
# the 'env' directory.
    run_in: fedora
# The setup variable list the command that will be executed after the
# provisioning of the software_stack is finished.
    setup:
      - command 1
      - command 2
# The test_cmds variable list the commands that will be executed on every
# 'vagrant provision' command. This list usually have the commands that test the
# application, so every time you run 'vagrant provision' all these commands
# will run the tests of your application.
    test_cmds:
      - test command 1
      - test command 2
# The folder variable sets the installation folder of the application. The
# 'dest' child variable is the destination folder where the application will be
# installed. If you add a 'src' child variable Vagrant will map that path from
# the host to the 'dest' path in the VM. Vagrant will create a shared folder
# using this information.
    folder:
      dest: "/app/{{ app_name }}"
